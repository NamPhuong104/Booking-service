datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  firstName      String?      @map("frist_name")
  lastName       String?      @map("last_name")
  phone          String?
  timezoneCode   String?      @map("timezone_code")
  password       String
  emailVerified  Boolean      @default(false) @map("email_verified")
  isActive       Boolean      @default(true) @map("is_active")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @default(now()) @updatedAt @map("updated_at")
  coachSessions  Session[]    @relation(name: "coach")
  clientSessions Session[]    @relation(name: "client")
  credentials    Credential[] @relation(name: "credential")
  Session        Session[]

  @@map("user")
}

model SessionTemplate {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  duration    Int
  isActive    Boolean   @default(true) @map("is_active")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @map("updated_at")
  Sesion      Session[]

  @@map("session_template")
}

model Session {
  id                Int              @id @default(autoincrement())
  coachId           Int              @map("coach_id")
  coach             User?            @relation(name: "coach", fields: [coachId], references: [id])
  clientId          Int              @map("client_id")
  client            User?            @relation(name: "client", fields: [clientId], references: [id])
  sessionTemplateId Int              @map("session_template_id")
  sessionTemplate   SessionTemplate? @relation(fields: [sessionTemplateId], references: [id])
  userId            Int?
  startAt           DateTime         @map("start_at")
  createdAt         DateTime         @default(now()) @map("created_at")
  updatedAt         DateTime         @default(now()) @updatedAt @map("updated_at")
  User              User?            @relation(fields: [userId], references: [id])

  @@map("session")
}

model Credential {
  id              Int      @id @default(autoincrement())
  userId          Int      @map("user_id")
  user            User?    @relation(name: "credential", fields: [userId], references: [id])
  integrationType String   @map("intergation_type")
  token           String
  data            Json
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("credential")
}
